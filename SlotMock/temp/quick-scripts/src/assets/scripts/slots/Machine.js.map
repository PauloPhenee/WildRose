{"version":3,"sources":["assets\\scripts\\slots\\Machine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Aux from '../SlotEnum';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Machine extends cc.Component {\r\n  @property(cc.Node)\r\n  public button: cc.Node = null;\r\n\r\n  @property(cc.Prefab)\r\n  public _reelPrefab = null;\r\n\r\n  @property({ type: cc.Prefab })\r\n  get reelPrefab(): cc.Prefab {\r\n    return this._reelPrefab;\r\n  }\r\n\r\n  set reelPrefab(newPrefab: cc.Prefab) {\r\n    this._reelPrefab = newPrefab;\r\n    this.node.removeAllChildren();\r\n\r\n    if (newPrefab !== null) {\r\n      this.createMachine();\r\n    }\r\n  }\r\n\r\n  @property({ type: cc.Integer })\r\n  public _numberOfReels = 3;\r\n\r\n  @property({ type: cc.Integer, range: [3, 6], slide: true })\r\n  get numberOfReels(): number {\r\n    return this._numberOfReels;\r\n  }\r\n\r\n  set numberOfReels(newNumber: number) {\r\n    this._numberOfReels = newNumber;\r\n\r\n    if (this.reelPrefab !== null) {\r\n      this.createMachine();\r\n    }\r\n  }\r\n\r\n  private reels = [];\r\n  public spinning = false;\r\n  public winningRows = [];\r\n\r\n    //Start\r\n  createMachine(): void {\r\n    this.node.destroyAllChildren();\r\n    this.reels = [];\r\n    let newReel: cc.Node;\r\n    for (let i = 0; i < this.numberOfReels; i += 1) {\r\n      newReel = cc.instantiate(this.reelPrefab);\r\n      this.node.addChild(newReel);\r\n      this.reels[i] = newReel;\r\n\r\n      const reelScript = newReel.getComponent('Reel');\r\n      reelScript.shuffle();\r\n      reelScript.reelAnchor.getComponent(cc.Layout).enabled = false;\r\n    }\r\n\r\n    this.node.getComponent(cc.Widget).updateAlignment();\r\n  }\r\n\r\n\r\n  spin(): void {\r\n    this.createMachine();\r\n    this.spinning = true;\r\n    this.button.getChildByName('Label').getComponent(cc.Label).string = 'STOP';\r\n\r\n    for (let i = 0; i < this.numberOfReels; i += 1) {\r\n      const theReel = this.reels[i].getComponent('Reel');\r\n\r\n      if (i % 2) {\r\n        theReel.spinDirection = Aux.Direction.Down;\r\n      } else {\r\n        theReel.spinDirection = Aux.Direction.Up;\r\n      }\r\n\r\n      theReel.doSpin(0.03 * i);\r\n    }\r\n  }\r\n\r\n  lock(): void {\r\n    this.button.getComponent(cc.Button).interactable = false;\r\n  }\r\n\r\n  stop(result: Array<Array<number>> = null): void {\r\n    setTimeout(() => { this.celebrateWin(); }, 3500);\r\n\r\n    setTimeout(() => {\r\n      this.spinning = false;\r\n      this.button.getComponent(cc.Button).interactable = true;\r\n      this.button.getChildByName('Label').getComponent(cc.Label).string = 'SPIN';\r\n    }, 3500);\r\n\r\n    const rngMod = Math.random() / 2;\r\n    for (let i = 0; i < this.numberOfReels; i += 1) {\r\n      const spinDelay = i < 2 + rngMod ? i / 4 : rngMod * (i - 2) + i / 4;\r\n      const theReel = this.reels[i].getComponent('Reel');\r\n      setTimeout(() => { theReel.readyStop(result[i]); }, spinDelay * 1000);\r\n    }\r\n  }\r\n\r\n  celebrateWin(): void {\r\n    if (this.winningRows.length > 0) {\r\n      for (var i = 0; i < this.winningRows.length; i += 1) {\r\n        for (var j = 0; j < this.numberOfReels; j += 1) {\r\n          const theReel = this.reels[j].getComponent('Reel');\r\n          theReel.getTileByPosition(this.winningRows[i]).onGlow();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  debugLog(string): any {\r\n    console.log(string);\r\n  }\r\n\r\n}\r\n"]}