{"version":3,"sources":["assets\\scripts\\slots\\Tile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkC,wBAAY;IAA9C;QAAA,qEAoCC;QAlCW,cAAQ,GAAG,EAAE,CAAC;;IAkC1B,CAAC;IAhCS,qBAAM,GAAZ;uCAAgB,OAAO;;;4BACnB,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;;;;;KAC7B;IAEK,4BAAa,GAAnB;uCAAuB,OAAO;;;4BAC1B,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;;;;;KACpB;IAEK,2BAAY,GAAlB;uCAAsB,OAAO;;;gBACnB,IAAI,GAAG,IAAI,CAAC;gBAClB,sBAAO,IAAI,OAAO,CAAU,UAAA,OAAO;wBAC/B,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,CAAC,WAAW,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE,cAAc;4BACrF,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;4BAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAClB,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,EAAC;;;KACN;IAED,sBAAO,GAAP,UAAQ,KAAa;QACjB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC;IAED,wBAAS,GAAT;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9B,CAAC;IAED,eAAe;IACf,sBAAO,GAAP,UAAQ,SAAkB;QACtB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;IACxD,CAAC;IAjCD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAC9B;IAFL,IAAI;QADxB,OAAO;OACa,IAAI,CAoCxB;IAAD,WAAC;CApCD,AAoCC,CApCiC,EAAE,CAAC,SAAS,GAoC7C;kBApCoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Tile extends cc.Component {\r\n    @property({ type: [cc.SpriteFrame], visible: true })\r\n    private textures = [];\r\n\r\n    async onLoad(): Promise<void> {\r\n        await this.loadTextures();\r\n    }\r\n\r\n    async resetInEditor(): Promise<void> {\r\n        await this.loadTextures();\r\n        this.setRandom();\r\n    }\r\n\r\n    async loadTextures(): Promise<boolean> {\r\n        const self = this;\r\n        return new Promise<boolean>(resolve => {\r\n            cc.loader.loadResDir('gfx/Square', cc.SpriteFrame, function afterLoad(err, loadedTextures) {\r\n                self.textures = loadedTextures;\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    setTile(index: number): void {\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.textures[index];\r\n    }\r\n\r\n    setRandom(): void {\r\n        const randomIndex = Math.floor(Math.random() * this.textures.length);\r\n        this.setTile(randomIndex);\r\n    }\r\n\r\n    //Sets the glow\r\n    SetGlow(condition: boolean): void {\r\n        this.node.getChildByName('glow').active = condition;\r\n    }\r\n}\r\n"]}